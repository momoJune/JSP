1. 일단은 데이터를 JSON으로 해보자
   -------------------------------
   data\memo.json
   -------------------------------
   [
	{
		"memo" : "와~~ 1빠다~~~",
		"name" : "주인장",
		"password" : "123456",
		"regDate" : "2021-12-27 10:23:45",
		"ip" : "192.168.0.29"
	}
	]

2. 패키지 3개를 만들자
   ----------------------------------
	1) kr.green.memo.vo  : 데이터를 저장하기 위한 용도의 클래스들
	2) kr.green.memo.dao : 데이터 처리를 담당하는 용도의 클래스들
	3) kr.green.memo.service : 실제 비지니스 로직을 처리하기 위한 클래스들
   ----------------------------------


3. 데이터를 읽어서 저장할 VO를 만들자.
   ----------------------------------
   MemoVO.java   
   ----------------------------------
	@Data
	public class MemoVO {
		private String name;
		private String password;
		private String memo;
		private String regDate;
		private String ip;
	}    
	
4. JSON파일을 읽어서 자바로 가져오고 데이터를 받아서 JSON으로 저장하는 서비스 클래스를 만들어 보자
   ----------------------------------
   MemoService.java   
   ----------------------------------
	package kr.green.memo.service;
	
	import java.io.File;
	import java.io.FileNotFoundException;
	import java.io.FileReader;
	import java.io.IOException;
	import java.io.PrintWriter;
	import java.util.List;
	
	import com.google.gson.Gson;
	import com.google.gson.reflect.TypeToken;
	
	import kr.green.memo.vo.MemoVO;
	
	public class MemoService {
		// 읽기
		public static List<MemoVO> getMemo(String path){
			List<MemoVO> list = null;
			String filename = "memo.json";
			Gson gson = new Gson();
			try(FileReader fr = new FileReader(path + File.separator + filename)){
				list = gson.fromJson(fr, new TypeToken<List<MemoVO>>() {}.getType());
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return list;
		}
		// 저장하기
		public static void setMemo(String path, MemoVO vo) {
			List<MemoVO> list = getMemo(path); // 읽어온다
			list.add(vo); // 추가한다.
			// 다시 저장한다.
			String filename = "memo.json";
			Gson gson = new Gson();
			try(PrintWriter pw = new PrintWriter(path + File.separator + filename)){
				gson.toJson(list, pw);
				pw.flush();
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}
	}
	
5. 테스트를 해보자
   -------------------------------------------------
   test.jsp	
   -------------------------------------------------	
	<%@page import="java.util.Date"%>
	<%@page import="java.text.SimpleDateFormat"%>
	<%@page import="kr.green.memo.vo.MemoVO"%>
	<%@page import="kr.green.memo.service.MemoService"%>
	<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>Insert title here</title>
	<script type="text/javascript">
	
	</script>
	<style type="text/css">
	
	</style>
	</head>
	<body>
		<%=MemoService.getMemo(application.getRealPath("data")) %>
		<hr />
		<%
			MemoVO vo = new MemoVO();
			vo.setName("나그네");
			vo.setPassword("123456");
			vo.setMemo("나는 이등이네!!!");
			vo.setIp(request.getRemoteAddr());
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
			vo.setRegDate(sdf.format(new Date()));
		
			MemoService.setMemo(application.getRealPath("data"), vo);
		%>
		<%=MemoService.getMemo(application.getRealPath("data")) %>
	</body>
	</html>	  

5. JSP파일을 만들어보자!!!!
   --------------------------------------------------------------------
	1) 목록보기  -- memoList.jsp
   --------------------------------------------------------------------
	<%@page import="kr.green.memo.service.MemoService"%>
	<%@page import="kr.green.memo.vo.MemoVO"%>
	<%@page import="java.util.List"%>
	<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	<%
		List<MemoVO> list = MemoService.getMemo(application.getRealPath("data"));
		System.out.println(application.getRealPath("data"));
	%>
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>출석 게시판</title>
	<script type="text/javascript">
		function formCheck(){
			// 이름이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("name");
			if(obj.value==null || obj.value.trim().length==0){
				alert('이름은 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			// 비번이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("password");
			if(obj.value==null || obj.value.trim().length==0){
				alert('비밀번호는 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			// 내용이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("memo");
			if(obj.value==null || obj.value.trim().length==0){
				alert('내용은 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			return true; // 이것은 생략해도 됨
		}
	</script>
	<style type="text/css">
		table { width : 1000px; margin: auto; padding:5px;}
		th { padding: 5px; border: 1px solid gray; background-color: silver;}
		.title { border: none; background-color: white; font-size: 22pt; text-align: center;}
		.subtitle { border: none; background-color: white; font-size: 10pt; text-align: right;}
		td { padding: 5px; border: 1px solid gray; }
	</style>
	</head>
	<body>
		<table>
			<tr>
				<th colspan="5" class="title">한줄 메모장 Ver 0.0009</th>
			</tr>
			<tr>
				<th colspan="5" class="subtitle">전체 : <%=list.size() %>개</th>
			</tr>
			<tr>
				<th>No</th>
				<th>작성자</th>
				<th width="50%">memo</th>
				<th>작성일</th>
				<th>IP</th>
			</tr>
			<%
				// 최근글이 위에 와야 하므로 꺼꾸로 돌린다. 1줄당 1개의 글
				for(int i=list.size()-1;i>=0;i--){ 
					MemoVO vo = list.get(i); // 글 1개를 가져오자
			%>
				<tr align="center">
					<td><%=String.format("%3d",i+1) %></td>
					<%
						String name = vo.getName();
						name = name.replaceAll("<", "&lt;");
						name = name.replaceAll(">", "&gt;");
					%>
					<td><%=name %></td>
					<%
						String memo = vo.getMemo();
						memo = memo.replaceAll("<", "&lt;");
						memo = memo.replaceAll(">", "&gt;");
						// 내용의 길이가 30자이사이면 25자만 표시하고 ...을 붙인다.
						String temp = memo;
						if(temp.length()>25){
							temp = temp.substring(0,25) + "...";
						}
						// title속성을 주어 전체 내용은 마우스를 올렸을때 풍선도움말로 보이게 한다.
					%>
					<td align="left" title='<%=memo%>'><%=temp %></td>
					<%-- 조건문을 써서  이전녕도는 년-월-일, 현재 연도는 월-일, 오늘은 시:분:초 만 출력하자--%>
					<td><%=vo.getRegDate().split(" ")[1] %></td> 
					<td><%=vo.getIp() %></td>
				</tr>
			<%  } %>
			<%-- 글쓰기 폼을 달아보자!!! --%>
			<tr>
				<td colspan="5">
					<%-- 
					onsubmit="return formCheck()" : 서버로 전송하기전에 자바스크립트로 전처리를 한다.
					formCheck()함수가 true를 리턴하면 서저로 전송되고 false를 리턴하면 전송되지 않는다.
					 --%>
					<form action="memoOK.jsp" method="post" onsubmit="return formCheck()">
						<input type="text" name="name" id="name" placeholder="작성자" required="required"/>
						<input type="password" name="password" id="password" placeholder="비밀번호" required="required"/>
						<input type="text" name="memo" id="memo" placeholder="내용입력" size="90" required="required"/>
						<input type="hidden" name="ip" value="<%=request.getRemoteAddr() %>" />
						<input type="submit" value="저장">
					</form>
				</td>
			</tr>
		</table>
	</body>
	</html>
   --------------------------------------------------------------------
	2) 저장하기  -- memoOk.jsp
   --------------------------------------------------------------------
	<%@page import="kr.green.memo.service.MemoService"%>
	<%@page import="kr.green.memo.vo.MemoVO"%>
	<%@page import="java.util.Date"%>
	<%@page import="java.text.SimpleDateFormat"%>
	<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	<% request.setCharacterEncoding("UTF-8"); %>
	<%-- 1. POST전송일때만 처리해준다. --%>
	<%
		if(!request.getMethod().equals("POST")){
			response.sendRedirect("memoList.jsp");
			return;
		}
	%>
	<%-- 2. 데이터를 받는다. --%>
	<%
	String name = request.getParameter("name");
	String password = request.getParameter("password");
	String memo = request.getParameter("memo");
	String ip = request.getParameter("ip");
	if(ip==null || ip.trim().equals("")) ip = request.getRemoteAddr(); // 폼에서 숨겨서 보내지 않았다면
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	String regDate = sdf.format(new Date()); // 저장시간이 작성시간이다.
	
	// 데이터의 유효성을 검증해 주어야 한다.
	if(name==null || name.trim().length()==0 
	   || password==null || password.trim().length()==0
	   || memo==null || memo.trim().length()==0){
		// 이름, 암호, 내용중에 하나라도 빈문자열이나 값이 존재하지 않는다면 저장하지 말고 리스트로 가자
		response.sendRedirect("memoList.jsp");
		return;
	}
	// 이름이나 내용중에 태그가 입력되어 있다면 태그를 무효화 시켜야 한다.
	// < 를 &lt;로 바꾸고 >를 &gt;로 바꿔 준다.
	name = name.replaceAll("<", "&lt;");
	name = name.replaceAll(">", "&gt;");
	memo = memo.replaceAll("<", "&lt;");
	memo = memo.replaceAll(">", "&gt;");
	
	MemoVO vo = new MemoVO();
	vo.setName(name);
	vo.setPassword(password);
	vo.setMemo(memo);
	vo.setRegDate(regDate);
	vo.setIp(ip);
	%>
	<%-- 3. 받은 데이터를 저장한다. --%>
	<%
		MemoService.setMemo(application.getRealPath("data"), vo);
	%>
	<%-- 4. 목록으로 돌아간다. --%>
	<%
		response.sendRedirect("memoList.jsp");
	%>
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>Insert title here</title>
	<script type="text/javascript">
	
	</script>
	<style type="text/css">
	
	</style>
	</head>
	<body>
	
	</body>
	</html>	
	
	

6. JSP파일을 좀더 완벽하게 만들어보자!!!!	
   --------------------------------------------------------------------
	1) 목록보기  -- memoList.jsp
   --------------------------------------------------------------------
	<%@page import="kr.green.memo.service.MemoService"%>
	<%@page import="kr.green.memo.vo.MemoVO"%>
	<%@page import="java.util.List"%>
	<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	<%
		List<MemoVO> list = MemoService.getMemo(application.getRealPath("data"));
		System.out.println(application.getRealPath("data"));
	%>
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>출석 게시판</title>
	<script type="text/javascript">
		function formCheck(){
			// 이름이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("name");
			if(obj.value==null || obj.value.trim().length==0){
				alert('이름은 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			// 비번이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("password");
			if(obj.value==null || obj.value.trim().length==0){
				alert('비밀번호는 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			// 내용이 없거나 공백만으로 되어있는지 검사한다.
			var obj = document.getElementById("memo");
			if(obj.value==null || obj.value.trim().length==0){
				alert('내용은 반드시 입력하셔야 합니다.');
				obj.value = '';
				obj.focus();
				return false;
			}
			return true; // 이것은 생략해도 됨
		}
	</script>
	<style type="text/css">
		table { width : 1000px; margin: auto; padding:5px;}
		th { padding: 5px; border: 1px solid gray; background-color: silver;}
		.title { border: none; background-color: white; font-size: 22pt; text-align: center;}
		.subtitle { border: none; background-color: white; font-size: 10pt; text-align: right;}
		td { padding: 5px; border: 1px solid gray; }
	</style>
	</head>
	<body>
		<table>
			<tr>
				<th colspan="5" class="title">한줄 메모장 Ver 0.0009</th>
			</tr>
			<tr>
				<th colspan="5" class="subtitle">전체 : <%=list.size() %>개</th>
			</tr>
			<tr>
				<th>No</th>
				<th>작성자</th>
				<th width="50%">memo</th>
				<th>작성일</th>
				<th>IP</th>
			</tr>
			<%
				// 최근글이 위에 와야 하므로 꺼꾸로 돌린다. 1줄당 1개의 글
				for(int i=list.size()-1;i>=0;i--){ 
					MemoVO vo = list.get(i); // 글 1개를 가져오자
			%>
				<tr align="center">
					<td><%=String.format("%3d",i+1) %></td>
					<%
						String name = vo.getName();
						name = name.replaceAll("<", "&lt;");
						name = name.replaceAll(">", "&gt;");
						String temp = name;
						if(temp.length()>4){
							temp = temp.substring(0,4) + "...";
						}
					%>
					<td title='<%=name%>'><%=temp %></td>
					<%
						String memo = vo.getMemo();
						memo = memo.replaceAll("<", "&lt;");
						memo = memo.replaceAll(">", "&gt;");
						// 내용의 길이가 30자이사이면 25자만 표시하고 ...을 붙인다.
						temp = memo;
						if(temp.length()>25){
							temp = temp.substring(0,25) + "...";
						}
						// title속성을 주어 전체 내용은 마우스를 올렸을때 풍선도움말로 보이게 한다.
					%>
					<td align="left" title='<%=memo%>'><%=temp %></td>
					<%-- 조건문을 써서  이전녕도는 년-월-일, 현재 연도는 월-일, 오늘은 시:분:초 만 출력하자--%>
					<td><%=vo.getRegDate().split(" ")[1] %></td> 
					<td><%=vo.getIp() %></td>
				</tr>
			<%  } %>
			<%-- 글쓰기 폼을 달아보자!!! --%>
			<tr>
				<td colspan="5">
					<%-- 
					onsubmit="return formCheck()" : 서버로 전송하기전에 자바스크립트로 전처리를 한다.
					formCheck()함수가 true를 리턴하면 서저로 전송되고 false를 리턴하면 전송되지 않는다.
					 --%>
					<form action="memoOK.jsp" method="post" onsubmit="return formCheck()">
						<input type="text" name="name" id="name" placeholder="작성자" required="required"/>
						<input type="password" name="password" id="password" placeholder="비밀번호" required="required"/>
						<input type="text" name="memo" id="memo" placeholder="내용입력" size="90" required="required"/>
						<input type="hidden" name="ip" value="<%=request.getRemoteAddr() %>" />
						<input type="submit" value="저장">
					</form>
				</td>
			</tr>
		</table>
	</body>
	</html>   
   --------------------------------------------------------------------
	2) 저장하기  -- memoOk.jsp
   --------------------------------------------------------------------
	<%@page import="kr.green.memo.service.MemoService"%>
	<%@page import="kr.green.memo.vo.MemoVO"%>
	<%@page import="java.util.Date"%>
	<%@page import="java.text.SimpleDateFormat"%>
	<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
	<% request.setCharacterEncoding("UTF-8"); %>
	<%-- 1. POST전송일때만 처리해준다. --%>
	<%
		if(!request.getMethod().equals("POST")){
			response.sendRedirect("memoList.jsp");
			return;
		}
	%>
	<%-- 2. 데이터를 받는다. --%>
	<%
	/*
	String name = request.getParameter("name");
	String password = request.getParameter("password");
	String memo = request.getParameter("memo");
	String ip = request.getParameter("ip");
	if(ip==null || ip.trim().equals("")) ip = request.getRemoteAddr(); // 폼에서 숨겨서 보내지 않았다면
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	String regDate = sdf.format(new Date()); // 저장시간이 작성시간이다.
	
	// 데이터의 유효성을 검증해 주어야 한다.
	if(name==null || name.trim().length()==0 
	   || password==null || password.trim().length()==0
	   || memo==null || memo.trim().length()==0){
		// 이름, 암호, 내용중에 하나라도 빈문자열이나 값이 존재하지 않는다면 저장하지 말고 리스트로 가자
		response.sendRedirect("memoList.jsp");
		return;
	}
	// 이름이나 내용중에 태그가 입력되어 있다면 태그를 무효화 시켜야 한다.
	// < 를 &lt;로 바꾸고 >를 &gt;로 바꿔 준다.
	name = name.replaceAll("<", "&lt;");
	name = name.replaceAll(">", "&gt;");
	memo = memo.replaceAll("<", "&lt;");
	memo = memo.replaceAll(">", "&gt;");
	
	MemoVO vo = new MemoVO();
	vo.setName(name);
	vo.setPassword(password);
	vo.setMemo(memo);
	vo.setRegDate(regDate);
	vo.setIp(ip);
	*/
	%>
	<!DOCTYPE html>
	<html>
	<head>
	<meta charset="UTF-8">
	<title>Insert title here</title>
	<script type="text/javascript">
	
	</script>
	<style type="text/css">
	
	</style>
	</head>
	<body>
	
	<%-- JSP에서 VO를 만들어 놓았다면 VO로 합번에 받을 수 있다. 자료형변환도 자동으로 이루어 진다. --%>
	<jsp:useBean id="vo" class="kr.green.memo.vo.MemoVO"/> <%-- MemoVO vo = new MemoVO(); 로 변경된다.  --%>
	<%-- vo.setName(request.getParameter("name")와 같다.
	<jsp:setProperty property="name" name="vo"/> 
	 모든 Setter를 한번에 부를 수 도 있다.
	 --%>
	<jsp:setProperty property="*" name="vo"/>
	<%-- 넘어오지 않은 데이터는 수동으로 채워준다. --%>
	<jsp:setProperty property="ip" name="vo" value="<%=request.getRemoteAddr() %>"/>
	<%
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
	String regDate = sdf.format(new Date()); // 저장시간이 작성시간이다.
	vo.setRegDate(regDate);
	%> 
	 
	
	
	<%-- 3. 받은 데이터를 저장한다. --%>
	<%
		MemoService.setMemo(application.getRealPath("data"), vo);
	%>
	<%-- 4. 목록으로 돌아간다. --%>
	<%
		response.sendRedirect("memoList.jsp");
	%>
	</body>
	</html>  